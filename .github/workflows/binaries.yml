name: Binaries

on:
  push:
    branches: ["main", "ci"]
    tags: ["*"]

env:
  CARGO_TERM_COLOR: always

jobs:
  release-linux-binaries:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl, aarch64-unknown-linux-gnu]
        include:
          - target: x86_64-unknown-linux-musl
            dependencies: musl-tools
          - target: aarch64-unknown-linux-gnu
            dependencies: gcc-aarch64-linux-gnu
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Configure build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@1.80
      - name: Install build dependencies
        run: sudo apt-get update --yes && sudo apt-get install --yes ${{ matrix.dependencies }}
      - name: Build release binaries
        run: |
          rustup target add "${{ matrix.target }}"
          cargo build --release --target "${{ matrix.target }}"
      - name: Upload release binaries
        uses: actions/upload-artifact@v4
        with:
          name: radicle-tui_${{ github.ref_name }}_${{ matrix.target }}
          path: target/${{ matrix.target }}/release/rad-tui

  release-macos-binaries:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: macos-12
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v4
      - name: Configure build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@1.77
      - name: Build release binaries
        run: |
          rustup target add "${{ matrix.target }}"
          cargo build --release --target "${{ matrix.target }}"
      - name: Upload release binaries
        uses: actions/upload-artifact@v4
        with:
          name: radicle-tui_${{ github.ref_name }}_${{ matrix.target }}
          path: target/${{ matrix.target }}/release/rad-tui
